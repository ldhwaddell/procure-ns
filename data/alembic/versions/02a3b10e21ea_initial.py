"""initial

Revision ID: 02a3b10e21ea
Revises: 
Create Date: 2025-04-14 19:04:20.105876

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02a3b10e21ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('master_tenders', 'tenderId',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('master_tenders', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'solicitationType',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'procurementEntity',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'endUserEntity',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'tenderStatus',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'importedAt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('new_tenders', 'tenderId',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('new_tenders', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'solicitationType',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'procurementEntity',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'endUserEntity',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'tenderStatus',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.add_column('tender_metadata', sa.Column('tenderId', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('solicitationType', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('title', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('procurementMethod', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('modifiedBy', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('createdDate', sa.DateTime(), nullable=True))
    op.add_column('tender_metadata', sa.Column('modifiedDate', sa.DateTime(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactName', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactEmail', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactPhoneNumber', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactProvince', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactDetails', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('procurementEntity', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('endUserEntity', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('endUserEntityOrganizationId', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('tenderUrl', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('closingDate', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('closingTime', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('closingDateDisplay', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('description', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('memo', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('issuedDate', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('tenderStatus', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('expectedDurationOfContract', sa.Integer(), nullable=True))
    op.add_column('tender_metadata', sa.Column('pickUpFee', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('termsOfPayment', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('sustainablePrimaryReason', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('sustainablePrimarySource', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('closingLocation', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('closingLocationOtherText', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('publicOpeningDate', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('publicOpeningTime', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('publicOpeningLocation', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('submissionLanguage', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('awardMemo', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('postDate', sa.String(), nullable=True))
    op.add_column('tender_metadata', sa.Column('contactMethod', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('tradeAgreement', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('attachments', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('tenderAwardData', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('tenderBidInformationDataList', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('unspscLevelData', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('procumentEntityData', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('procurementContactInformation', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('procurementContactMethod', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('informationInDocument', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('tender_metadata', sa.Column('relevantRegions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('tender_metadata', 'createdBy',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint('tender_metadata_id_fkey', 'tender_metadata', type_='foreignkey')
    op.create_foreign_key(None, 'tender_metadata', 'master_tenders', ['id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tender_metadata', type_='foreignkey')
    op.create_foreign_key('tender_metadata_id_fkey', 'tender_metadata', 'master_tenders', ['id'], ['id'], ondelete='CASCADE')
    op.alter_column('tender_metadata', 'createdBy',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('tender_metadata', 'relevantRegions')
    op.drop_column('tender_metadata', 'informationInDocument')
    op.drop_column('tender_metadata', 'procurementContactMethod')
    op.drop_column('tender_metadata', 'procurementContactInformation')
    op.drop_column('tender_metadata', 'procumentEntityData')
    op.drop_column('tender_metadata', 'unspscLevelData')
    op.drop_column('tender_metadata', 'tenderBidInformationDataList')
    op.drop_column('tender_metadata', 'tenderAwardData')
    op.drop_column('tender_metadata', 'attachments')
    op.drop_column('tender_metadata', 'tradeAgreement')
    op.drop_column('tender_metadata', 'contactMethod')
    op.drop_column('tender_metadata', 'postDate')
    op.drop_column('tender_metadata', 'awardMemo')
    op.drop_column('tender_metadata', 'submissionLanguage')
    op.drop_column('tender_metadata', 'publicOpeningLocation')
    op.drop_column('tender_metadata', 'publicOpeningTime')
    op.drop_column('tender_metadata', 'publicOpeningDate')
    op.drop_column('tender_metadata', 'closingLocationOtherText')
    op.drop_column('tender_metadata', 'closingLocation')
    op.drop_column('tender_metadata', 'sustainablePrimarySource')
    op.drop_column('tender_metadata', 'sustainablePrimaryReason')
    op.drop_column('tender_metadata', 'termsOfPayment')
    op.drop_column('tender_metadata', 'pickUpFee')
    op.drop_column('tender_metadata', 'expectedDurationOfContract')
    op.drop_column('tender_metadata', 'tenderStatus')
    op.drop_column('tender_metadata', 'issuedDate')
    op.drop_column('tender_metadata', 'memo')
    op.drop_column('tender_metadata', 'description')
    op.drop_column('tender_metadata', 'closingDateDisplay')
    op.drop_column('tender_metadata', 'closingTime')
    op.drop_column('tender_metadata', 'closingDate')
    op.drop_column('tender_metadata', 'tenderUrl')
    op.drop_column('tender_metadata', 'endUserEntityOrganizationId')
    op.drop_column('tender_metadata', 'endUserEntity')
    op.drop_column('tender_metadata', 'procurementEntity')
    op.drop_column('tender_metadata', 'contactDetails')
    op.drop_column('tender_metadata', 'contactProvince')
    op.drop_column('tender_metadata', 'contactPhoneNumber')
    op.drop_column('tender_metadata', 'contactEmail')
    op.drop_column('tender_metadata', 'contactName')
    op.drop_column('tender_metadata', 'modifiedDate')
    op.drop_column('tender_metadata', 'createdDate')
    op.drop_column('tender_metadata', 'modifiedBy')
    op.drop_column('tender_metadata', 'procurementMethod')
    op.drop_column('tender_metadata', 'title')
    op.drop_column('tender_metadata', 'solicitationType')
    op.drop_column('tender_metadata', 'tenderId')
    op.alter_column('new_tenders', 'tenderStatus',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'endUserEntity',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'procurementEntity',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'solicitationType',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('new_tenders', 'tenderId',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('master_tenders', 'importedAt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('master_tenders', 'tenderStatus',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'endUserEntity',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'procurementEntity',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'solicitationType',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('master_tenders', 'tenderId',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    # ### end Alembic commands ###
